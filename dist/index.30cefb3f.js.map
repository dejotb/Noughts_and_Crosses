{"mappings":"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","sources":["src/lib/player.js","src/data/DOM-elements.js","src/data/elements.js","src/lib/handlers.js","src/lib/animations.js","src/lib/index.js","src/app.js"],"sourcesContent":["// Creates players blueprint\r\n\r\nclass Player {\r\n  constructor(player, image, playerId) {\r\n    this.playerName = player;\r\n    this.playerNumber = playerId;\r\n    this.image = image;\r\n    this.allFieldsSelected = [];\r\n    this.playerScore = 0;\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import Player from '../lib/player.js';\r\n\r\n// Players\r\n\r\nexport const player1 = new Player('Player1', 'cross.4cbdff5e.svg', 1);\r\nexport const player2 = new Player('Player2', 'circle.5ca8fc71.svg', 2);\r\n\r\n// Select board classes\r\n\r\nexport const board = document.querySelector('.board__container');\r\nexport const boardFields = document.querySelectorAll('.board__item');\r\nexport const playersScore = document.querySelectorAll('.score__total');\r\nexport const modal = document.querySelector('.modal__container');\r\n\r\n// Select button id\r\n\r\nexport const btnReset = document.querySelector('#btn__reset-score');\r\n\r\n// Select Referee classes\r\n\r\nexport const mouthOpen = document.querySelector('.mouth__open');\r\nexport const eyes = document.querySelectorAll('.eyes');\r\nexport const handLeft = document.querySelector('.hand__left');\r\nexport const handRight = document.querySelector('.hand__right');\r\n","import { player1, player2 } from './DOM-elements.js';\r\n\r\n// A grid of all winning combinations\r\n\r\nexport const boardGridWinCombinations = [\r\n  [1, 2, 3],\r\n  [4, 5, 6],\r\n  [7, 8, 9],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [3, 6, 9],\r\n  [1, 5, 9],\r\n  [3, 5, 7],\r\n];\r\n\r\n// An array of players\r\n\r\nexport const players = [player1, player2];\r\n","import { activePlayer, clearData, selectBoardField } from './index.js';\r\nimport { modal, board } from '../data/DOM-elements.js';\r\n\r\n//= =========================================================================\r\n// Show modal with information about a winner\r\n//= =========================================================================\r\n\r\nexport const showWinModal = function () {\r\n  const html = `\r\n        <p>${activePlayer.playerName} won!</p>\r\n      `;\r\n  modal.insertAdjacentHTML('afterbegin', html);\r\n  modal.classList.remove('hidden');\r\n};\r\n\r\n//= =========================================================================\r\n// Show modal with information about a draw\r\n//= =========================================================================\r\n\r\nexport const showDrawModal = function () {\r\n  const html = `\r\n        <p>We have a draw!</p>\r\n      `;\r\n  modal.insertAdjacentHTML('afterbegin', html);\r\n  modal.classList.remove('hidden');\r\n};\r\n\r\n//= =========================================================================\r\n// Show modal and create event to clear data on click after win/draw game\r\n//= =========================================================================\r\n\r\nexport const handleOnWinOrDraw = function () {\r\n  board.removeEventListener('click', selectBoardField);\r\n  document\r\n    .querySelector('#btn__next-round')\r\n    .addEventListener('click', clearData);\r\n};\r\n\r\n//= =========================================================================\r\n// Add cross/circle image to the board grid\r\n//= =========================================================================\r\n\r\nexport const addImage = function (e, player) {\r\n  const html = `\r\n                <img class='image' src='${player.image}' alt=''>\r\n            `;\r\n  if (e.target.classList.contains('board__item')) {\r\n    e.target.insertAdjacentHTML('afterbegin', html);\r\n    e.target.querySelector('.image').classList.add('imageEnter');\r\n  }\r\n};\r\n","import {\r\n  boardFields,\r\n  mouthOpen,\r\n  eyes,\r\n  handLeft,\r\n  handRight,\r\n} from '../data/DOM-elements.js';\r\nimport { activePlayer } from './index.js';\r\nimport { players } from '../data/elements.js';\r\n\r\n//= =========================================================================\r\n// Animation of winning combination\r\n//= =========================================================================\r\n\r\nexport const animateWinner = function (winningCombination) {\r\n  // animate board\r\n\r\n  boardFields.forEach((el) => (el.style.pointerEvents = 'none'));\r\n  const winnerDOMFields = winningCombination[0].map(\r\n    (element) =>\r\n      (element = document.querySelector(`[data-number='${element}'] img`))\r\n  );\r\n  winnerDOMFields.forEach((el) => el.classList.add('winner'));\r\n\r\n  fire(0.25, {\r\n    spread: 26,\r\n    startVelocity: 55,\r\n  });\r\n  fire(0.2, {\r\n    spread: 60,\r\n  });\r\n  fire(0.35, {\r\n    spread: 100,\r\n    decay: 0.91,\r\n    scalar: 0.8,\r\n  });\r\n  fire(0.1, {\r\n    spread: 120,\r\n    startVelocity: 25,\r\n    decay: 0.92,\r\n    scalar: 1.2,\r\n  });\r\n  fire(0.1, {\r\n    spread: 130,\r\n    startVelocity: 45,\r\n  });\r\n  fire(0.1, {\r\n    spread: 130,\r\n    startVelocity: 45,\r\n  });\r\n\r\n  // animate referee\r\n\r\n  mouthOpen.classList.add('mouth__open-animation');\r\n  eyes.forEach((eye) => eye.classList.remove('eyes-animation'));\r\n\r\n  if (activePlayer === players[0]) {\r\n    handLeft.classList.add('hand__left-animation');\r\n  } else if (activePlayer === players[1]) {\r\n    handRight.classList.add('hand__right-animation');\r\n  }\r\n\r\n  // highlight winner score board\r\n  document\r\n    .querySelector(`[data-id='${activePlayer.playerNumber}']`)\r\n    .closest('.score__total').style.opacity = '1';\r\n};\r\n\r\n//= =========================================================================\r\n// Animate confetti\r\n//= =========================================================================\r\n\r\nexport const fire = function (particleRatio, opts) {\r\n  const count = 200;\r\n  const defaults = {\r\n    origin: { y: 0.55 },\r\n  };\r\n  confetti({\r\n    ...defaults,\r\n    ...opts,\r\n    particleCount: Math.floor(count * particleRatio),\r\n  });\r\n};\r\n","import { players, boardGridWinCombinations } from '../data/elements.js';\r\nimport {\r\n  playersScore,\r\n  board,\r\n  modal,\r\n  boardFields,\r\n  handLeft,\r\n  handRight,\r\n  mouthOpen,\r\n  eyes,\r\n} from '../data/DOM-elements.js';\r\nimport {\r\n  showWinModal,\r\n  showDrawModal,\r\n  handleOnWinOrDraw,\r\n  addImage,\r\n} from './handlers.js';\r\nimport { animateWinner } from './animations.js';\r\n\r\n// The active player\r\n\r\nexport let activePlayer = '';\r\n\r\n// Current round\r\n\r\nexport let roundNr = 1;\r\n\r\nexport let playerTurn = 1;\r\n\r\nexport let drawScore = 0;\r\n\r\n// ==========================================================================\r\n// handles board grid\r\n// ==========================================================================\r\n\r\nexport const selectBoardField = function (e) {\r\n  if (playerTurn % 2) {\r\n    activePlayer = players[0];\r\n    document\r\n      .querySelector(`[data-id='${activePlayer.playerNumber}']`)\r\n      .closest('.score__total').style.opacity = '0.5';\r\n  } else {\r\n    activePlayer = players[1];\r\n    document\r\n      .querySelector(`[data-id='${activePlayer.playerNumber}']`)\r\n      .closest('.score__total').style.opacity = '0.5';\r\n  }\r\n\r\n  // adds a number to active players array based on the clicked field\r\n  const fieldSelected = e.target.dataset.number;\r\n  activePlayer.allFieldsSelected.push(parseInt(fieldSelected));\r\n  playersScore.forEach((el) => (el.style.opacity = '1'));\r\n  document\r\n    .querySelector(`[data-id='${activePlayer.playerNumber}']`)\r\n    .closest('.score__total').style.opacity = '0.5';\r\n  e.target.style.pointerEvents = 'none';\r\n  e.target.tabIndex = '-1';\r\n  addImage(e, activePlayer);\r\n  checkResult(activePlayer);\r\n  roundNr++;\r\n  playerTurn++;\r\n};\r\n\r\nexport const selectBoardFieldOnClick = function (e) {\r\n  if (e.target.classList.contains('board__item')) {\r\n    selectBoardField(e);\r\n  }\r\n};\r\n\r\n//= =========================================================================\r\n// Adds point to player's score after a win\r\n//= =========================================================================\r\n\r\nexport const addPointtoPlayer = function (player) {\r\n  player.playerScore += 1;\r\n  document.querySelector(`[data-id='${player.playerNumber}']`).innerHTML =\r\n    player.playerScore;\r\n};\r\n\r\n//= =========================================================================\r\n// Adds point to draw score\r\n//= =========================================================================\r\n\r\nexport const addPointtoTie = function () {\r\n  drawScore++;\r\n  document.querySelector(`[data-id='0']`).innerHTML = drawScore;\r\n};\r\n\r\n//= =========================================================================\r\n// Compares the active player's all fields selected ('allFieldsSelected' variable) with the winning combinations grid (\"boardGridWinCombinations\" variable). Shows wether active player won/lost, or there is a draw\r\n//= =========================================================================\r\n\r\nexport const checkResult = function (player) {\r\n  const containsAll = boardGridWinCombinations.filter((arr) =>\r\n    arr.every((el) => player.allFieldsSelected.includes(el))\r\n  );\r\n\r\n  // If player WON\r\n\r\n  if (containsAll.some((el) => el)) {\r\n    setTimeout(showWinModal, 1500);\r\n    addPointtoPlayer(player);\r\n    animateWinner(containsAll);\r\n    handleOnWinOrDraw();\r\n\r\n    // if it is a DRAW\r\n  } else if (roundNr === 9) {\r\n    setTimeout(showDrawModal, 1500);\r\n    addPointtoTie();\r\n    handleOnWinOrDraw();\r\n    board.classList.add('draw');\r\n  }\r\n};\r\n\r\n//= =========================================================================\r\n// Clear data and classes on a new round\r\n//= =========================================================================\r\n\r\nexport const clearData = function () {\r\n  roundNr = 1;\r\n  playerTurn += 2;\r\n\r\n  // board clearance\r\n  modal.classList.add('hidden');\r\n  board\r\n    .querySelectorAll('.board__item')\r\n    .forEach((item) => (item.textContent = ''));\r\n  players.forEach((el) => (el.allFieldsSelected = []));\r\n  boardFields.forEach((el) => (el.style.pointerEvents = 'all'));\r\n  board.classList.remove('draw');\r\n  document\r\n    .querySelector(`[data-id='${activePlayer.playerNumber}']`)\r\n    .closest('.score__total').style.opacity = '0.5';\r\n  modal.innerHTML = '<button id=\"btn__next-round\">next round!</button>';\r\n\r\n  board.addEventListener('click', selectBoardFieldOnClick);\r\n\r\n  // Referee classes clearance\r\n  handRight.classList.remove('hand__right-animation');\r\n  handLeft.classList.remove('hand__left-animation');\r\n  mouthOpen.classList.remove('mouth__open-animation');\r\n  eyes.forEach((eye) => eye.classList.add('eyes-animation'));\r\n};\r\n\r\n//= =========================================================================\r\n// Resets a score\r\n//= =========================================================================\r\nexport const resetScores = function () {\r\n  const scores = document.querySelectorAll(`[data-id]`);\r\n  players.map((player) => (player.playerScore = 0));\r\n  scores.forEach((score) => (score.innerHTML = 0));\r\n  board\r\n    .querySelectorAll('.board__item')\r\n    .forEach((item) => (item.textContent = ''));\r\n  players.forEach((el) => (el.allFieldsSelected = []));\r\n  boardFields.forEach((el) => (el.style.pointerEvents = 'all'));\r\n  board.classList.remove('draw');\r\n  roundNr = 1;\r\n  drawScore = 0;\r\n};\r\n","import { board, btnReset } from './data/DOM-elements.js';\r\nimport { selectBoardFieldOnClick, resetScores } from './lib/index.js';\r\n\r\nboard.addEventListener('click', selectBoardFieldOnClick);\r\n\r\nbtnReset.addEventListener('click', resetScores);\r\n"],"names":["$e1612b3f21563400$export$2e2bcd8739ae039","constructor","player","image","playerId","this","playerName","playerNumber","allFieldsSelected","playerScore","$bb27d850c4856f30$export$95e6482bed6ad700","$bb27d850c4856f30$export$1aef4a53c02f3697","$bb27d850c4856f30$export$85e79e4b8e9e4986","document","querySelector","$bb27d850c4856f30$export$29d3aab79661bbfd","querySelectorAll","$bb27d850c4856f30$export$23d679efcf85a043","$bb27d850c4856f30$export$96e4b36520c26a2c","$bb27d850c4856f30$export$7fafe9179edcee6a","$bb27d850c4856f30$export$2e1baa70d68bde75","$bb27d850c4856f30$export$60b896fd2e3e4b2","$bb27d850c4856f30$export$b5209410f5871b43","$bb27d850c4856f30$export$4463b62a99cb91d9","$f83d6fdfab445164$export$4d1764f7096bf1c3","$f83d6fdfab445164$export$2b8dccb26e41f6c2","$703d2ea6ccfac020$export$1337dbdb3151e86","html","$1f69e5e4f608a8a1$export$a37de2801650f036","insertAdjacentHTML","classList","remove","$703d2ea6ccfac020$export$955904901e8c32f7","$703d2ea6ccfac020$export$bdc49b863dcd636a","removeEventListener","$1f69e5e4f608a8a1$export$3d47611254ac5172","addEventListener","$1f69e5e4f608a8a1$export$ec21c014cef0b1e8","e","$53f6d21817f0f148$export$12f608acadef049f","winningCombination","forEach","el","style","pointerEvents","map","element","add","$53f6d21817f0f148$export$46ff36df9b99bc25","spread","startVelocity","decay","scalar","eye","closest","opacity","particleRatio","opts","confetti","origin","y","particleCount","Math","floor","$1f69e5e4f608a8a1$export$c54e46010f09fca0","$1f69e5e4f608a8a1$export$f77e0d7cab2e932f","$1f69e5e4f608a8a1$export$6ede9d2876b0bad6","fieldSelected","target","dataset","number","push","parseInt","tabIndex","$703d2ea6ccfac020$export$7bc0801d8428ec28","$1f69e5e4f608a8a1$export$778e9fcff4a6507d","$1f69e5e4f608a8a1$export$bf6220ce1be8f907","contains","containsAll","filter","arr","every","includes","some","setTimeout","innerHTML","$1f69e5e4f608a8a1$export$f77088f4432929e6","item","textContent","scores","score"],"version":3,"file":"index.30cefb3f.js.map"}