:root {
  --ff-primary: "Press Start 2P", cursive;
  --fs-xl: clamp(3.5rem, 6vw + 1rem, 5rem);
  --fs-600: clamp(3.25rem, 6vw + 1rem, 4rem);
  --fs-500: 2rem;
  --fs-400: 1.8rem;
  --fs-300: clamp(1.5rem, 2vw + 0.4rem, 2.5rem);
  --color-font: #11347d;
  --color-primary: #ffc600;
  --color-green: #07793d;
  --color-yellow: #fdd01b;
  --color-blue: #0c2461;
  --color-red: #db3445;
  --color-white: #ffffff;
  --color-grey: #363636;
  --z-index-negative: -1;
  --z-index-box: 1000;
  --z-index-popup: 1100;
  --z-index-modal: 1200;
  --z-index-loader: 1300;
}
@media screen and (min-width: var(--bp-xl)) {
  :root :root {
    --fs-500: 2.75rem;
    --fs-400: 2.5rem;
  }
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

ul {
  list-style: none;
}

*:focus {
  outline-color: var(--color-blue);
}

html {
  box-sizing: border-box;
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  font-size: calc(16px + 0.8vw);
  font-family: var(--ff-primary);
  color: var(--color-yellow);
  font-weight: 400;
  line-height: 1.6;
  text-rendering: optimizeSpeed;
}

::selection {
  background-color: var(--color-yellow);
  color: var(--color-grey);
}

a:hover,
button:hover {
  cursor: pointer;
}

button {
  font-family: inherit;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
  height: 100%;
}

input,
button,
textarea,
select {
  font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

a {
  color: inherit;
  text-decoration: none;
  transition: 0.2s all;
}

html {
  scrollbar-color: var(--color-blue) #e0e0e0;
  scrollbar-width: thin;
}

input,
textarea {
  border: none;
}

table {
  contain: strict;
}

p {
  max-width: 70ch;
}
p:not(:last-child) {
  margin-bottom: 1rem;
}

body {
  background-color: var(--color-blue);
}

.container {
  width: 100vw;
  height: 100vh;
  display: grid;
  padding: 4rem 1rem 0.5rem;
  grid-gap: 2rem;
  grid-template-rows: 1fr 1fr;
  justify-items: center;
  align-items: start;
}

.board__container {
  align-self: center;
  position: relative;
  height: 37vmax;
  width: 37vmax;
  background-color: var(--color-white);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: 1fr;
  grid-gap: 0.5rem;
}
@media screen and (min-width: 25em) {
  .board__container {
    max-width: 80rem;
    height: 40vmax;
    width: 40vmax;
  }
}
@media screen and (min-width: 90em) {
  .board__container {
    max-width: 80rem;
    height: 25vmax;
    width: 25vmax;
  }
}
.board__item {
  display: grid;
  justify-items: center;
  align-items: center;
  background-color: var(--color-blue);
}

.score__wrapper {
  display: grid;
  justify-items: center;
}
.score__container {
  font-size: 1.1rem;
  display: flex;
  background-color: black;
  margin: 2rem 0;
  grid-gap: 12vw;
  padding: 1rem;
}
@media screen and (min-width: 25em) {
  .score__container {
    grid-gap: 5vw;
    font-size: var(--fs-400);
  }
}
.score__total, .score__draw {
  display: grid;
  flex-direction: column;
  justify-items: center;
  align-items: end;
  grid-gap: 1rem;
  opacity: 0.5;
}
.score__number {
  font-size: var(--fs-600);
}
.score__draw {
  opacity: 0.7;
}
.score__image {
  width: 3rem;
}

.image__referee {
  display: block;
  margin-bottom: -3rem;
  width: 30vmax;
  z-index: -1;
  opacity: 0;
  animation: refereeReveal 3s alternate 1s forwards cubic-bezier(0.61, -0.06, 0.65, 1.36);
}
@media screen and (min-width: 90em) {
  .image__referee {
    width: 18vmax;
    margin-bottom: -4rem;
  }
}

.imageEnter {
  animation: imageEnter 0.5s 1 forwards;
}

.winner {
  animation: winnnerAnimation 0.4s alternate 8 ease-in forwards;
}

.draw {
  animation: drawAnimation 0.5s alternate 0.5s 8 ease-in;
}

@keyframes winnnerAnimation {
  0% {
    transform: scale(0.8);
  }
  100% {
    transform: scale(0.4);
  }
}
@keyframes drawAnimation {
  0% {
    background-color: var(--color-yellow);
  }
  100% {
    background-color: var(--color-grey);
  }
}
@keyframes imageEnter {
  0% {
    transform: scale(0.4);
  }
  100% {
    transform: scale(0.8);
  }
}
.modal__container {
  position: absolute;
  top: 43%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: max(30rem, calc(35vw + 10rem));
  height: calc(12rem + 5vw);
  font-size: var(--fs-300);
  display: grid;
  justify-items: center;
  align-items: center;
  transition: all 0.5s;
  padding: 2rem;
  background-color: var(--color-font);
}
.modal__container button {
  font-size: var(--fs-500);
  padding: 0.5rem 1rem;
}

.opacity-full {
  opacity: 1;
}

.opacity-half {
  opacity: 0.5;
}

.hidden {
  opacity: 0.5;
  display: none;
}

.hand__left {
  transform: translateY(15rem);
  transform-origin: bottom right;
}
.hand__left-animation {
  animation: handWaveLeft 0.8s 4 0.2s ease-in-out;
}

.hand__right {
  transform: translateY(14rem);
  transform-origin: bottom left;
}
.hand__right-animation {
  animation: handWaveRight 0.8s 4 0.2s ease-in-out;
}

.mouth__open {
  opacity: 0;
}
.mouth__open-animation {
  animation: mouthMove 3s 1 forwards;
}

.eyes-animation {
  animation: eyesMove 9s 3s infinite ease-in-out;
}

@keyframes handWaveLeft {
  0% {
    transform: rotate(-5deg) translate(0rem);
  }
  50% {
    transform: rotate(2deg) translate(1rem);
  }
  100% {
    transform: rotate(-5deg) translate(0rem);
  }
}
@keyframes handWaveRight {
  0% {
    transform: rotate(5deg) translate(0rem);
  }
  50% {
    transform: rotate(-6deg) translate(-4rem);
  }
  100% {
    transform: rotate(5deg) translate(0rem);
  }
}
@keyframes refereeReveal {
  0% {
    transform: translateY(10rem);
    opacity: 0;
  }
  30% {
    transform: translateY(5rem);
    opacity: 1;
  }
  70% {
    transform: translateY(5rem);
    opacity: 1;
  }
  100% {
    transform: translateY(0rem);
    opacity: 1;
  }
}
@keyframes mouthMove {
  0% {
    transform: translateY(0rem);
    opacity: 1;
  }
  99% {
    transform: translateY(0rem);
    opacity: 1;
  }
  100% {
    transform: translateY(-1rem);
    background-color: pink;
    opacity: 0;
  }
}
@keyframes eyesMove {
  0% {
    transform: translateY(0rem) translateX(0rem);
  }
  3% {
    transform: translateY(0rem) translateX(0rem);
  }
  4% {
    transform: translateY(2rem) translateX(2rem);
  }
  30% {
    transform: translateY(2rem) translateX(-2rem);
  }
  45% {
    transform: translateY(-2rem) translateX(-2rem);
  }
  65% {
    transform: translateY(-2rem) translateX(2.5rem);
  }
  70% {
    transform: translateY(0rem) translateX(0rem);
  }
  85% {
    transform: translateY(0rem) translateX(0rem);
  }
  90% {
    transform: translateY(2rem) translateX(0rem);
  }
  100% {
    transform: translateY(0rem) translateX(0rem);
  }
}

/*# sourceMappingURL=style.css.map */
